<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<beans:import resource='spring-datasource.xml'/> 
	
	<http pattern="/static/**" security="none" />

    <http use-expressions="true">
    	<intercept-url pattern="/index.jsp" access="permitAll" />
	    <intercept-url pattern="/login.jsp" access="permitAll" />
	    <intercept-url pattern="/loggedout.jsp" access="permitAll" />
	    <intercept-url pattern="/loginfailed.jsp" access="permitAll" />
		<intercept-url pattern="/public/**" access="permitAll" />
	    
	    <intercept-url pattern="/secure/admin/**" access="hasRole('role_admin')" />
	    <intercept-url pattern="/secure/**" access="isAuthenticated()" />
	    <intercept-url pattern="/**" access="denyAll" />
		<form-login login-page="/login.jsp" default-target-url="/secure/welcome.jsp"
			authentication-failure-url="/loginfailed.jsp" />
		<logout logout-success-url="/loggedout.jsp" />
    </http>

    <authentication-manager>
    	<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
	 
			   users-by-username-query="
			      select userName,userPassword, enabled 
			      from users where userName=?" 
	 
			   authorities-by-username-query="
			      select u.userName, ur.authority from users u, user_roles ur 
			      where u.userID = ur.userID and u.username =?  " 
	 
			/>
	   	</authentication-provider>
    </authentication-manager>
</beans:beans> 